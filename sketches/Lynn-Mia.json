{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "WHOA BW_Checkbox GUI_002",
      "mod": 1673014726697,
      "code": "let credits = {\r\n\t\"student_names\": \"Lynn Germiquet, Mia Müller\",\r\n\t\"recode_id\": \"zotero2-2604593.9Y92VPKD\",\r\n\t\"recode_timestamp\": 102,\r\n\t\"recode_title\": \"WHOA\",\r\n\t\"recode_designer\": \"Zago, Nero, Sapper, Carola\",\r\n\t\"recode_year\": 1988\r\n}\r\n\r\nlet checkboxAudio, checkboxColor, checkboxRandom\r\nlet colorPicker\r\nlet font\r\nlet word = 'WHOA'\r\nlet disco\r\nlet sliderDisco, sliderSize, textSizee\r\nlet audioRot = 0\r\nlet guiHolder\r\n\r\n\r\nfunction preload() {\r\n\tfont = loadFont(\"data/Lynn-Mia/arialblack.ttf\");\r\n\r\n}\r\n\r\nfunction setup() {\r\n\tbackground(0)\r\n\tcreateCanvas(windowWidth, windowHeight)\r\n\r\n\tguiHolder = createDiv()\r\n\t\t.class('guiHolder')\r\n\r\n\t//Slider1_DISCO \r\n\tcreateDiv('DISCO').parent(guiHolder).class('slider1')\r\n\tsliderDisco = createSlider(1, 20, 1, 1).parent(guiHolder).class('slider1')\r\n\r\n\r\n\t//Slider2_SIZE\r\n\tcreateDiv('SIZE').parent(guiHolder).class('slider1')\r\n\tsliderSize = createSlider(1, 800, 345, 1).parent(guiHolder).class('slider1')\r\n\r\n\t//Audio\r\n\tcheckboxAudio = createCheckbox('SCREAM PLEASE!', false)\r\n\tcheckboxAudio.parent(guiHolder)\r\n\t\t.class('slider')\r\n\tsetupAudio();\r\n\r\n\t//Random\r\n\tcheckboxRandom = createCheckbox('RANDOM', false)\r\n\tcheckboxRandom.parent(guiHolder)\r\n\t\t.class('slider')\r\n\r\n\t//COLOR\r\n\tcolorPicker = createColorPicker('#FFFFFF')\r\n\tcolorPicker.parent(guiHolder)\r\n\t\t.class('color')\r\n\r\n\tcreateElement('style', `\r\n *{ \r\n    outline: none; \r\n    box-sizing: border-box;\r\n    width: 10%\r\n  } \r\n    .guiHolder{ \r\n      position: fixed; \r\n      right: 10px; \r\n      top: 60px; \r\n      border: 2px solid #fff; \r\n      border-radius: 30px; \r\n      padding: 15px; \r\n    } \r\n     .color{ \r\n      margin-top:15%;\r\n      margin-bottom:3%;\r\n      width:100%;\r\n    } \r\n    \r\n     .slider{ \r\n      width: 100%;\r\n      color:#fff; \r\n      font-family:monospace; \r\n      font-size:10pt;\r\n      margin-top:7%\r\n    } \r\n       .slider1{ \r\n      width: 100%;\r\n      color:#fff; \r\n      font-family:monospace; \r\n      font-size:10pt;\r\n      margin-top:5%;\r\n    } \r\n\t`)\r\n}\r\n\r\nfunction draw() {\r\n\ttextSize(textSizee)\r\n\ttextAlign(CENTER, CENTER)\r\n\ttextFont(font)\r\n\tangleMode(DEGREES)\r\n\r\n\t//Slider Disco\r\n\tif(frameCount % (19 - sliderDisco.value()) == 0 || random(1) > .99) { // flipSpeed should be slider.value()\r\n\t\tdisco = !disco\r\n\t}\r\n\ttextSizee = sliderSize.value()\r\n\r\n\tif(disco) {\r\n\t\tbackground(colorPicker.color())\r\n\t\tfill(invertColor(colorPicker.value()))\r\n\t} else {\r\n\t\tbackground(invertColor(colorPicker.value()))\r\n\t\tfill(colorPicker.color())\r\n\t}\r\n\r\n\t//AUDIO\r\n\tfor(let i = 0; i < word.length; i++) {\r\n\t\tlet letter = word.charAt(i)\r\n\t\tlet x = map(i, 0, word.length - 1, width * .2, width * .8)\r\n\r\n\t\t//Audio /* audio vars: amp, ampEase, fft, waveform */\r\n\t\tif(checkboxAudio.checked()) {\r\n\r\n\t\t\tupdateAudio();\r\n\t\t\ttextAlign(CENTER, CENTER)\r\n\t\t\taudioRot += ampEase * .15\r\n\r\n\t\t}\r\n\r\n\t\t//RANDOM\r\n\t\tpush()\r\n\t\ttranslate(x, height / 2)\r\n\t\trotate(audioRot)\r\n\r\n\t\t//if(word.length-1 - frameCount*.1%word.length == i)\r\n\t\tif(checkboxRandom.checked()) {\r\n\t\t\tif(random(1) > .96) {\r\n\t\t\t\ttext(letter, 0, 0)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttext(letter, 0, 0)\r\n\t\t}\r\n\t\tpop()\r\n\t}\r\n\r\n}\r\n\r\n/* AUDIO INIT */\r\nlet mic, fftRaw, fft = [],\r\n\twaveform = [],\r\n\tamp = 0.0,\r\n\tampStereo = {\r\n\t\tl: 0.0,\r\n\t\tr: 0.0\r\n\t},\r\n\tampEase = 0.0,\r\n\tnumBins = 512,\r\n\tbands = 12;\r\n\r\nfunction setupAudio() {\r\n\tuserStartAudio();\r\n\tmic = new p5.AudioIn();\r\n\tmic.start();\r\n\tfftRaw = new p5.FFT(0.75, numBins);\r\n\tfftRaw.setInput(mic);\r\n}\r\n\r\nfunction updateAudio() {\r\n\tfftRaw.analyze();\r\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\r\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\r\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\r\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\r\n\twaveform = fftRaw.waveform(); // array (-1, 1)\r\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\r\n}\r\n\r\nfunction invertColor(hex) {\r\n\tif(hex.indexOf('#') === 0) {\r\n\t\thex = hex.slice(1);\r\n\t}\r\n\t// convert 3-digit hex to 6-digits.\r\n\tif(hex.length === 3) {\r\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n\t}\r\n\tif(hex.length !== 6) {\r\n\t\tthrow new Error('Invalid HEX color.');\r\n\t}\r\n\t// invert color components\r\n\tvar r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\r\n\t\tg = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\r\n\t\tb = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\r\n\t// pad each with zeros and return\r\n\treturn '#' + padZero(r) + padZero(g) + padZero(b);\r\n}\r\n\r\nfunction padZero(str, len) {\r\n\tlen = len || 2;\r\n\tvar zeros = new Array(len).join('0');\r\n\treturn (zeros + str).slice(-len);\r\n}"
    }
  ]
}